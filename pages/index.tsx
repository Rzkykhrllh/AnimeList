import Header from "@components/Header";
import Banner from "@components/Banner";
import Head from "next/head";
import requests from "../utils/requests";
import { TMovie, TGenre, TElement } from "../types/movie.type";
import { GetStaticProps, GetStaticPaths, GetServerSideProps } from "next";

type Props = {
  netflixOriginal: TMovie[];
  trendingNow: TMovie[];
  topRated: TMovie[];
  actionMovies: TMovie[];
  comedyMovies: TMovie[];
  horrorMovies: TMovie[];
  romanceMovies: TMovie[];
  documentariesMovies: TMovie[];
};

const Home = (props: Props) => {
  const {
    netflixOriginal,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    documentariesMovies,
  } = props;

  console.log("netflix original", netflixOriginal);

  return (
    <div className={"relative h-[2000px]"}>
      <Head>
        <title>Home Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="relative pb-24 pl-4 lg:space-y-24 lg:pl-16">
        <Banner movies={netflixOriginal} />
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const netflixOriginal = await fetch(requests.fetchNetflixOriginals).then(
    (response) => response.json()
  );
  const trendingNow = await fetch(requests.fetchTrending).then((response) =>
    response.json()
  );
  const topRated = await fetch(requests.fetchTopRated).then((response) =>
    response.json()
  );
  const actionMovies = await fetch(requests.fetchActionMovies).then(
    (response) => response.json()
  );
  const comedyMovies = await fetch(requests.fetchComedyMovies).then(
    (response) => response.json()
  );
  const horrorMovies = await fetch(requests.fetchHorrorMovies).then(
    (response) => response.json()
  );
  const romanceMovies = await fetch(requests.fetchRomanceMovies).then(
    (response) => response.json()
  );
  const documentariesMovies = await fetch(requests.fetchDocumentaries).then(
    (response) => response.json()
  );

  return {
    props: {
      netflixOriginal: netflixOriginal.results,
      trendingNow: trendingNow.results,
      topRated: topRated.results,
      actionMovies: actionMovies.results,
      comedyMovies: comedyMovies.results,
      horrorMovies: horrorMovies.results,
      romanceMovies: romanceMovies.results,
      documentariesMovies: documentariesMovies.results,
    },
  };
};

export default Home;
